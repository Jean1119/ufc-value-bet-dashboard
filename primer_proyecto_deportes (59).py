# -*- coding: utf-8 -*-
"""primer_proyecto_deportes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12WRb6NZQkSIhEATar2c2wey0OyUfbX3u
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib

st.title("UFC Value Betting & Bankroll Simulator")

@st.cache_data
def load_data(uploaded_file):
    return pd.read_csv(uploaded_file)

@st.cache_resource
def load_model(model_path):
    return joblib.load(model_path)

uploaded_file = st.file_uploader("Upload your merged historical dataset CSV", type="csv")
model_file = st.file_uploader("Upload your trained UFC model (.pkl)", type="pkl")

if uploaded_file and model_file:
    df = load_data(uploaded_file)
    model = load_model(model_file)

    expected_features = [
        "RedOdds", "BlueOdds", "RedExpectedValue", "BlueExpectedValue",
        "WinStreakDif", "LossDif", "KODif", "SubDif",
        "HeightDif", "ReachDif", "AgeDif"
    ]
    st.write("Model expects these features:", expected_features)
    st.write("Your CSV columns:", df.columns.tolist())

    # --- Build all required features ---
    df['RedOdds'] = df['R_odds']
    df['BlueOdds'] = df['B_odds']
    df['RedExpectedValue'] = 0
    df['BlueExpectedValue'] = 0
    df['WinStreakDif'] = 0
    df['LossDif'] = df['losses_total_diff'] if 'losses_total_diff' in df.columns else 0
    df['KODif'] = df['kd_diff'] if 'kd_diff' in df.columns else 0
    df['SubDif'] = df['sub_att_diff'] if 'sub_att_diff' in df.columns else 0
    df['HeightDif'] = df['height_diff'] if 'height_diff' in df.columns else 0
    df['ReachDif'] = df['reach_diff'] if 'reach_diff' in df.columns else 0
    df['AgeDif'] = df['age_diff'] if 'age_diff' in df.columns else 0

    # --- Final prediction dataframe ---
    X = df[expected_features].fillna(0)

    # --- Model prediction ---
    probs = model.predict_proba(X)[:, 1]
    df['RedProb'] = probs
    df['BlueProb'] = 1 - probs

    st.write("First 5 rows of prediction probabilities:", df[['RedProb', 'BlueProb']].head())

    # Continue with your value bet logic and bankroll simulation here...

else:
    st.info("Upload both your merged historical dataset CSV and trained model (.pkl) to start.")